import numpy as np
import sys


def hveto_parser(infile):
    '''
    parses an svg file generated by hveto to find the rankings of channels in that round. It then prints out the top N channels to a file.

    '''
    ## number of channels to print out, in descending order of hveto significance.
    N = 6

    f = open(infile, 'r')

    id, chnl, sig = [], [], []

    for line in f:

        if 'winner' in line:
            win_chnl = line[line.find('winner:')+ 8 : line.find('[')-1]


        if 'id="tooltip-' in line:
            line0 = line
            line1 = next(f)
            line2 = next(f)
            line3 = next(f)
            line4 = next(f)

            id.append( int( line0[line0.find('-') + 1 : line0.find('v')-2] )  )
            chnl.append( line4[line4.find('>') + 1 : -8 ]  )

            #xsig.append(float(line4[line4.find('x=')+ 3 : line4.find('y=')- 2] ))
            sig.append(float(line4[line4.find('y=')+ 3 : line4.find('>')- 1]) )

    # clsoe f
    f.close()

    id = np.array(id)
    chnl = np.array(chnl)
    sig = np.array(sig)

    sig_idx = np.argsort(sig)
    sig = sig[sig_idx]
    chnl = chnl[sig_idx]
    id = id[sig_idx]

    return win_chnl, chnl, sig
